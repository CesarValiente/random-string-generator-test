# This workflow will build a Java project with Gradle
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-gradle

name: publish-mavencentral
# This workflow builds and publishes the different artifacts the project has..
# Every library publication has its own job, so if one fails the other can run, and we can see them all
# individually in Github Actions view.

on:
  #  release:
  #    types: [published]
  pull_request:
  workflow_dispatch:
    inputs:
      name:
        description: 'Manual publication to MavenCentral'
      home:
        description: 'location'
        required: false

jobs:
  publish:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8

      - name: Cache Gradle packages
        uses: actions/cache@v2
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
          restore-keys: ${{ runner.os }}-gradle

      # Base64 decodes and pipes the GPG key content into the secret file
      - name: Prepare environment
        env:
          GPG_KEY_CONTENTS: ${{ secrets.SIGNING_SECRET_KEY }}
          SIGNING_SECRET_KEY_RING_FILE: ${{ secrets.SIGNING_SECRET_FILE }}
        run: |
          git fetch --unshallow
          sudo bash -c "echo 'SIGNING_SECRET_KEY' | base64 -d > 'SIGNING_SECRET_FILE'"

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: clean
        run: ./gradlew clean

        # Builds the release artifacts of the library
      - name: Release build
        run: ./gradlew :library::assembleRelease

        # Generates other artifacts (javadocJar is optional)
      - name: Source jar
        run: ./gradlew androidSourcesJar

        # Runs upload, and then closes & releases the repository
      - name: Publish to MavenCentral
        run: ./gradlew :library:publishCesarMavenTestPublicationToMavencentralRepository --max-workers 1
        env:
          OSSRH_USERNAME: ${{ secrets.MAVEN_USER }}
          OSSRH_PASSWORD: ${{ secrets.MAVEN_PASSWORD }}
          SIGNING_KEY_ID: ${{ secrets.SIGNING_KEY_ID }}
          SIGNING_PASSWORD: ${{ secrets.SIGNING_PASSWORD }}
          SIGNING_SECRET_KEY_RING_FILE: ${{ secrets.SIGNING_SECRET_FILE }}
